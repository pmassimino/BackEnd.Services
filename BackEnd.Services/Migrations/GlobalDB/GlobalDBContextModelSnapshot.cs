// <auto-generated />
using System;
using BackEnd.Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Services.Migrations.GlobalDB
{
    [DbContext(typeof(GlobalDBContext))]
    partial class GlobalDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("BackEnd.Services.Models.Global.Accion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accion");

                    b.HasData(
                        new
                        {
                            Id = "Add",
                            Nombre = "Nuevo"
                        },
                        new
                        {
                            Id = "Edit",
                            Nombre = "Editar"
                        },
                        new
                        {
                            Id = "Update",
                            Nombre = "Actualizar"
                        },
                        new
                        {
                            Id = "Delete",
                            Nombre = "Eliminar"
                        },
                        new
                        {
                            Id = "GetAll",
                            Nombre = "Listar"
                        },
                        new
                        {
                            Id = "Execute",
                            Nombre = "Ejecutar"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdGrupo")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = "0000000001",
                            Email = "pmassimino@hotmail.com",
                            Nombre = "admin",
                            Password = "JrCdgs9+JFZYDic1e30pk0iDjwE="
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Comprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodAfip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comprobante");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodAfip = "1",
                            Nombre = "FACTURA A"
                        },
                        new
                        {
                            Id = 2,
                            CodAfip = "2",
                            Nombre = "NOTAS DE DEBITO A"
                        },
                        new
                        {
                            Id = 3,
                            CodAfip = "3",
                            Nombre = "NOTAS DE CREDITO A"
                        },
                        new
                        {
                            Id = 4,
                            CodAfip = "4",
                            Nombre = "RECIBOS A"
                        },
                        new
                        {
                            Id = 5,
                            CodAfip = "5",
                            Nombre = "NOTAS DE VENTA AL CONTADO A"
                        },
                        new
                        {
                            Id = 6,
                            CodAfip = "6",
                            Nombre = "FACTURA B"
                        },
                        new
                        {
                            Id = 7,
                            CodAfip = "5",
                            Nombre = "NOTAS DE DEBITO B"
                        },
                        new
                        {
                            Id = 8,
                            CodAfip = "8",
                            Nombre = "NOTAS DE CREDITO B"
                        },
                        new
                        {
                            Id = 9,
                            CodAfip = "9",
                            Nombre = "RECIBOS B"
                        },
                        new
                        {
                            Id = 10,
                            CodAfip = "10",
                            Nombre = "NOTAS DE VENTA AL CONTADO B"
                        },
                        new
                        {
                            Id = 11,
                            CodAfip = "11",
                            Nombre = "FACTURA C"
                        },
                        new
                        {
                            Id = 12,
                            CodAfip = "12",
                            Nombre = "NOTAS DE DEBITO C"
                        },
                        new
                        {
                            Id = 13,
                            CodAfip = "13",
                            Nombre = "NOTAS DE CREDITO C"
                        },
                        new
                        {
                            Id = 15,
                            CodAfip = "15",
                            Nombre = "RECIBOS C"
                        },
                        new
                        {
                            Id = 16,
                            CodAfip = "16",
                            Nombre = "NOTAS DE VENTA AL CONTADO C"
                        },
                        new
                        {
                            Id = 17,
                            CodAfip = "17",
                            Nombre = "LIQUIDACION DE SERVICIOS PUBLICOS CLASE A"
                        },
                        new
                        {
                            Id = 18,
                            CodAfip = "18",
                            Nombre = "LIQUIDACION DE SERVICIOS PUBLICOS CLASE B"
                        },
                        new
                        {
                            Id = 19,
                            CodAfip = "19",
                            Nombre = "FACTURAS DE EXPORTACION"
                        },
                        new
                        {
                            Id = 20,
                            CodAfip = "20",
                            Nombre = "NOTAS DE DEBITO POR OPERACIONES CON EL EXTERIOR"
                        },
                        new
                        {
                            Id = 21,
                            CodAfip = "21",
                            Nombre = "NOTAS DE CREDITO POR OPERACIONES CON EL EXTERIOR"
                        },
                        new
                        {
                            Id = 22,
                            CodAfip = "23",
                            Nombre = "FACTURAS - PERMISO EXPORTACION SIMPLIFICADO - DTO. 855/97"
                        },
                        new
                        {
                            Id = 24,
                            CodAfip = "24",
                            Nombre = "COMPROBANTES “A” DE CONSIGNACION PRIMARIA PARA EL SECTOR PESQUERO MARITIMO"
                        },
                        new
                        {
                            Id = 25,
                            CodAfip = "25",
                            Nombre = "COMPROBANTES “B” DE COMPRA PRIMARIA PARA EL SECTOR PESQUERO MARITIMO"
                        },
                        new
                        {
                            Id = 26,
                            CodAfip = "26",
                            Nombre = "COMPROBANTES “B” DE CONSIGNACION PRIMARIA PARA EL SECTOR PESQUERO MARITIMO"
                        },
                        new
                        {
                            Id = 27,
                            CodAfip = "27",
                            Nombre = "LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE A"
                        },
                        new
                        {
                            Id = 28,
                            CodAfip = "28",
                            Nombre = "LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE B"
                        },
                        new
                        {
                            Id = 29,
                            CodAfip = "29",
                            Nombre = "LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE C"
                        },
                        new
                        {
                            Id = 30,
                            CodAfip = "30",
                            Nombre = "COMPROBANTES DE COMPRA DE BIENES USADOS"
                        },
                        new
                        {
                            Id = 31,
                            CodAfip = "31",
                            Nombre = "MANDATO - CONSIGNACION"
                        },
                        new
                        {
                            Id = 32,
                            CodAfip = "32",
                            Nombre = "COMPROBANTES PARA RECICLAR MATERIALES"
                        },
                        new
                        {
                            Id = 33,
                            CodAfip = "33",
                            Nombre = "LIQUIDACION PRIMARIA DE GRANOS"
                        },
                        new
                        {
                            Id = 34,
                            CodAfip = "34",
                            Nombre = "COMPROBANTES A DEL APARTADO A  INCISO F)  R.G. N°  1415"
                        },
                        new
                        {
                            Id = 35,
                            CodAfip = "35",
                            Nombre = "COMPROBANTES B DEL ANEXO I, APARTADO A, INC. F), R.G. N° 1415"
                        },
                        new
                        {
                            Id = 36,
                            CodAfip = "36",
                            Nombre = "COMPROBANTES C DEL Anexo I, Apartado A, INC.F), R.G. N° 1415"
                        },
                        new
                        {
                            Id = 37,
                            CodAfip = "37",
                            Nombre = "NOTAS DE DEBITO O DOCUMENTO EQUIVALENTE QUE CUMPLAN CON LA R.G. N° 1415"
                        },
                        new
                        {
                            Id = 38,
                            CodAfip = "38",
                            Nombre = "NOTAS DE CREDITO O DOCUMENTO EQUIVALENTE QUE CUMPLAN CON LA R.G. N° 1415"
                        },
                        new
                        {
                            Id = 39,
                            CodAfip = "39",
                            Nombre = "OTROS COMPROBANTES A QUE CUMPLEN CON LA R G  1415"
                        },
                        new
                        {
                            Id = 40,
                            CodAfip = "40",
                            Nombre = "OTROS COMPROBANTES B QUE CUMPLAN CON LA R.G. N° 1415"
                        },
                        new
                        {
                            Id = 41,
                            CodAfip = "41",
                            Nombre = "OTROS COMPROBANTES C QUE CUMPLAN CON LA R.G. N° 1415"
                        },
                        new
                        {
                            Id = 43,
                            CodAfip = "43",
                            Nombre = "NOTA DE CREDITO LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE B"
                        },
                        new
                        {
                            Id = 44,
                            CodAfip = "44",
                            Nombre = "NOTA DE CREDITO LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE C"
                        },
                        new
                        {
                            Id = 45,
                            CodAfip = "45",
                            Nombre = "NOTA DE DEBITO LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE A"
                        },
                        new
                        {
                            Id = 46,
                            CodAfip = "46",
                            Nombre = "NOTA DE DEBITO LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE B"
                        },
                        new
                        {
                            Id = 47,
                            CodAfip = "47",
                            Nombre = "NOTA DE DEBITO LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE C"
                        },
                        new
                        {
                            Id = 48,
                            CodAfip = "48",
                            Nombre = "NOTA DE CREDITO LIQUIDACION UNICA COMERCIAL IMPOSITIVA CLASE A"
                        },
                        new
                        {
                            Id = 49,
                            CodAfip = "49",
                            Nombre = "COMPROBANTES DE COMPRA DE BIENES NO REGISTRABLES A CONSUMIDORES FINALES"
                        },
                        new
                        {
                            Id = 50,
                            CodAfip = "50",
                            Nombre = "RECIBO FACTURA A  REGIMEN DE FACTURA DE CREDITO "
                        },
                        new
                        {
                            Id = 51,
                            CodAfip = "51",
                            Nombre = "FACTURAS M"
                        },
                        new
                        {
                            Id = 52,
                            CodAfip = "52",
                            Nombre = "NOTAS DE DEBITO M"
                        },
                        new
                        {
                            Id = 53,
                            CodAfip = "53",
                            Nombre = "NOTAS DE CREDITO M"
                        },
                        new
                        {
                            Id = 54,
                            CodAfip = "54",
                            Nombre = "RECIBOS M"
                        },
                        new
                        {
                            Id = 55,
                            CodAfip = "55",
                            Nombre = "NOTAS DE VENTA AL CONTADO M"
                        },
                        new
                        {
                            Id = 56,
                            CodAfip = "56",
                            Nombre = "COMPROBANTES M DEL ANEXO I  APARTADO A  INC F) R.G. N° 1415"
                        },
                        new
                        {
                            Id = 57,
                            CodAfip = "57",
                            Nombre = "OTROS COMPROBANTES M QUE CUMPLAN CON LA R.G. N° 1415"
                        },
                        new
                        {
                            Id = 58,
                            CodAfip = "58",
                            Nombre = "CUENTAS DE VENTA Y LIQUIDO PRODUCTO M"
                        },
                        new
                        {
                            Id = 59,
                            CodAfip = "59",
                            Nombre = "LIQUIDACIONES M"
                        },
                        new
                        {
                            Id = 60,
                            CodAfip = "60",
                            Nombre = "CUENTAS DE VENTA Y LIQUIDO PRODUCTO A"
                        },
                        new
                        {
                            Id = 61,
                            CodAfip = "61",
                            Nombre = "CUENTAS DE VENTA Y LIQUIDO PRODUCTO B"
                        },
                        new
                        {
                            Id = 63,
                            CodAfip = "63",
                            Nombre = "LIQUIDACIONES A"
                        },
                        new
                        {
                            Id = 64,
                            CodAfip = "64",
                            Nombre = "LIQUIDACIONES B"
                        },
                        new
                        {
                            Id = 66,
                            CodAfip = "66",
                            Nombre = "DESPACHO DE IMPORTACION"
                        },
                        new
                        {
                            Id = 68,
                            CodAfip = "68",
                            Nombre = "LIQUIDACION C"
                        },
                        new
                        {
                            Id = 70,
                            CodAfip = "70",
                            Nombre = "RECIBOS FACTURA DE CREDITO"
                        },
                        new
                        {
                            Id = 80,
                            CodAfip = "80",
                            Nombre = "INFORME DIARIO DE CIERRE (ZETA) - CONTROLADORES FISCALES"
                        },
                        new
                        {
                            Id = 81,
                            CodAfip = "81",
                            Nombre = "TIQUE FACTURA A"
                        },
                        new
                        {
                            Id = 82,
                            CodAfip = "82",
                            Nombre = "TIQUE FACTURA B"
                        },
                        new
                        {
                            Id = 83,
                            CodAfip = "83",
                            Nombre = "TIQUE"
                        },
                        new
                        {
                            Id = 88,
                            CodAfip = "88",
                            Nombre = "REMITO ELECTRONICO"
                        },
                        new
                        {
                            Id = 89,
                            CodAfip = "89",
                            Nombre = "RESUMEN DE DATOS"
                        },
                        new
                        {
                            Id = 90,
                            CodAfip = "90",
                            Nombre = "OTROS COMPROBANTES - DOCUMENTOS EXCEPTUADOS - NOTAS DE CREDITO"
                        },
                        new
                        {
                            Id = 91,
                            CodAfip = "91",
                            Nombre = "REMITOS R"
                        },
                        new
                        {
                            Id = 99,
                            CodAfip = "99",
                            Nombre = "OTROS COMPROBANTES QUE NO CUMPLEN O ESTÁN EXCEPTUADOS DE LA R.G. 1415 Y SUS MODIF "
                        },
                        new
                        {
                            Id = 110,
                            CodAfip = "110",
                            Nombre = "TIQUE NOTA DE CREDITO "
                        },
                        new
                        {
                            Id = 111,
                            CodAfip = "111",
                            Nombre = "TIQUE FACTURA C"
                        },
                        new
                        {
                            Id = 112,
                            CodAfip = "112",
                            Nombre = " TIQUE NOTA DE CREDITO A"
                        },
                        new
                        {
                            Id = 113,
                            CodAfip = "113",
                            Nombre = "TIQUE NOTA DE CREDITO B"
                        },
                        new
                        {
                            Id = 114,
                            CodAfip = "114",
                            Nombre = "TIQUE NOTA DE CREDITO CB"
                        },
                        new
                        {
                            Id = 115,
                            CodAfip = "115",
                            Nombre = "TIQUE NOTA DE DEBITO A"
                        },
                        new
                        {
                            Id = 116,
                            CodAfip = "116",
                            Nombre = "TIQUE NOTA DE DEBITO B"
                        },
                        new
                        {
                            Id = 117,
                            CodAfip = "117",
                            Nombre = "TIQUE NOTA DE DEBITO C"
                        },
                        new
                        {
                            Id = 118,
                            CodAfip = "118",
                            Nombre = "TIQUE FACTURA M"
                        },
                        new
                        {
                            Id = 119,
                            CodAfip = "119",
                            Nombre = "TIQUE NOTA DE CREDITO M"
                        },
                        new
                        {
                            Id = 120,
                            CodAfip = "120",
                            Nombre = "TIQUE NOTA DE DEBITO M"
                        },
                        new
                        {
                            Id = 201,
                            CodAfip = "201",
                            Nombre = "FACTURA DE CRÉDITO ELECTRÓNICA MiPyMEs (FCE) A"
                        },
                        new
                        {
                            Id = 202,
                            CodAfip = "202",
                            Nombre = "NOTA DE DEBITO ELECTRÓNICA MiPyMEs (FCE) A"
                        },
                        new
                        {
                            Id = 203,
                            CodAfip = "203",
                            Nombre = "NOTA DE CREDITO ELECTRÓNICA MiPyMEs (FCE) A"
                        },
                        new
                        {
                            Id = 206,
                            CodAfip = "206",
                            Nombre = "FACTURA DE CRÉDITO ELECTRÓNICA MiPyMEs (FCE) B"
                        },
                        new
                        {
                            Id = 207,
                            CodAfip = "207",
                            Nombre = "NOTA DE DEBITO ELECTRÓNICA MiPyMEs (FCE) B"
                        },
                        new
                        {
                            Id = 208,
                            CodAfip = "208",
                            Nombre = "NOTA DE CREDITO ELECTRÓNICA MiPyMEs (FCE) B"
                        },
                        new
                        {
                            Id = 211,
                            CodAfip = "211",
                            Nombre = "FACTURA DE CRÉDITO ELECTRÓNICA MiPyMEs (FCE) C"
                        },
                        new
                        {
                            Id = 212,
                            CodAfip = "212",
                            Nombre = "NOTA DE DEBITO ELECTRÓNICA MiPyMEs (FCE) C"
                        },
                        new
                        {
                            Id = 213,
                            CodAfip = "213",
                            Nombre = "NOTA DE CREDITO ELECTRÓNICA MiPyMEs (FCE) C"
                        },
                        new
                        {
                            Id = 331,
                            CodAfip = "331",
                            Nombre = "LIQUIDACION SECUNDARIA DE GRANOS"
                        },
                        new
                        {
                            Id = 332,
                            CodAfip = "332",
                            Nombre = "CERTIFICACION ELECTRONICA (GRANOS)"
                        },
                        new
                        {
                            Id = 995,
                            CodAfip = "995",
                            Nombre = "REMITO ELECTRÓNICO CÁRNICO"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.CondIva", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodAfip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CondIva");

                    b.HasData(
                        new
                        {
                            Id = "01",
                            CodAfip = "1",
                            Nombre = "RESPONSABLE INSCRIPTO"
                        },
                        new
                        {
                            Id = "O3",
                            CodAfip = "3",
                            Nombre = "CONSUMIDOR FINAL"
                        },
                        new
                        {
                            Id = "04",
                            CodAfip = "4",
                            Nombre = "EXENTO"
                        },
                        new
                        {
                            Id = "05",
                            CodAfip = "5",
                            Nombre = "RESPONSABLE MONOTRIBUTO"
                        },
                        new
                        {
                            Id = "06",
                            CodAfip = "6",
                            Nombre = "NO CATEGORIZADO"
                        },
                        new
                        {
                            Id = "08",
                            CodAfip = "8",
                            Nombre = "EXPORTACION"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.CondIvaOperacion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Alicuota")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodAfip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CondIvaOperacion");

                    b.HasData(
                        new
                        {
                            Id = "001",
                            Alicuota = 0m,
                            CodAfip = "1",
                            Nombre = "No Gravado"
                        },
                        new
                        {
                            Id = "002",
                            Alicuota = 0m,
                            CodAfip = "2",
                            Nombre = "Exento"
                        },
                        new
                        {
                            Id = "003",
                            Alicuota = 0m,
                            CodAfip = "3",
                            Nombre = "0%"
                        },
                        new
                        {
                            Id = "004",
                            Alicuota = 10.5m,
                            CodAfip = "4",
                            Nombre = "10.5%"
                        },
                        new
                        {
                            Id = "005",
                            Alicuota = 21m,
                            CodAfip = "5",
                            Nombre = "21%"
                        },
                        new
                        {
                            Id = "006",
                            Alicuota = 27m,
                            CodAfip = "6",
                            Nombre = "27%"
                        },
                        new
                        {
                            Id = "008",
                            Alicuota = 5m,
                            CodAfip = "8",
                            Nombre = "5%"
                        },
                        new
                        {
                            Id = "009",
                            Alicuota = 2.5m,
                            CodAfip = "9",
                            Nombre = "2.5%"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Altura")
                        .HasColumnType("TEXT");

                    b.Property<string>("DatabaseName")
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCondicionGanancia")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCondicionIB")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCondicionIva")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdLocalidad")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdOrganizacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdOwner")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdProvincia")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdTipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Movil")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("MovilSec")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NumeroIB")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Oficina")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Piso")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonoSec")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdOrganizacion");

                    b.ToTable("Empresa");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f51d9987-6ee8-4b10-971e-c306df44b95b"),
                            Altura = 810m,
                            DatabaseName = "HerediaDB",
                            Domicilio = "QUINTANA ",
                            Email = "lorenaheredia@live.com.ar",
                            IdCondicionIva = "05",
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdProvincia = "03",
                            IdTipoDoc = "80",
                            Nombre = "HEREDIA MARIA LORENA",
                            NombreComercial = "LA TRIGUEÑA SUCURSAL SUR",
                            NumeroDocumento = 23255953044L,
                            NumeroIB = 0m,
                            Oficina = 0m,
                            Piso = 0m,
                            Telefono = "999-999999"
                        },
                        new
                        {
                            Id = new Guid("bdd05dab-3ebb-44e5-ba5d-1f413506dbb1"),
                            Altura = 100m,
                            DatabaseName = "AltDb",
                            Domicilio = "CALLE S/N",
                            Email = "nombre@sudominio.com",
                            IdCondicionIva = "01",
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdProvincia = "03",
                            IdTipoDoc = "80",
                            Nombre = "EMPRESA ALTERNATIVA",
                            NombreComercial = "EMPRESA ALTERNATIVA",
                            NumeroDocumento = 1111111111L,
                            NumeroIB = 0m,
                            Oficina = 0m,
                            Piso = 0m,
                            Telefono = "999-999999"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.EmpresaAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(0);

                    b.Property<string>("IdAccount")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "IdAccount");

                    b.HasIndex("EmpresaId");

                    b.ToTable("EmpresaAccount");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f51d9987-6ee8-4b10-971e-c306df44b95b"),
                            IdAccount = "0000000001"
                        },
                        new
                        {
                            Id = new Guid("bdd05dab-3ebb-44e5-ba5d-1f413506dbb1"),
                            IdAccount = "0000000001"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Localidad", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdProvincia")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Localidad");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Moneda", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Organizacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizacion");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            Nombre = "Organizacion General"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Permiso", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdAccion")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdRecurso")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdAccion");

                    b.HasIndex("IdRecurso");

                    b.ToTable("Permiso");

                    b.HasData(
                        new
                        {
                            Id = "Almacen.Articulo.Add",
                            IdAccion = "Add",
                            IdRecurso = "Almacen.Articulo"
                        },
                        new
                        {
                            Id = "Almacen.Articulo.Edit",
                            IdAccion = "Edit",
                            IdRecurso = "Almacen.Articulo"
                        },
                        new
                        {
                            Id = "Almacen.Articulo.Update",
                            IdAccion = "Update",
                            IdRecurso = "Almacen.Articulo"
                        },
                        new
                        {
                            Id = "Almacen.Articulo.Delete",
                            IdAccion = "Delete",
                            IdRecurso = "Almacen.Articulo"
                        },
                        new
                        {
                            Id = "Almacen.Articulo.GetAll",
                            IdAccion = "GetAll",
                            IdRecurso = "Almacen.Articulo"
                        },
                        new
                        {
                            Id = "Almacen.Articulo.Update.Precio",
                            IdAccion = "Execute",
                            IdRecurso = "Almacen.Articulo"
                        },
                        new
                        {
                            Id = "Contable.CuentaMayor.Add",
                            IdAccion = "Add",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.CuentaMayor.Edit",
                            IdAccion = "Edit",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.CuentaMayor.Update",
                            IdAccion = "Update",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.CuentaMayor.Delete",
                            IdAccion = "Delete",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.CuentaMayor.GetAll",
                            IdAccion = "GetAll",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.Mayor.Add",
                            IdAccion = "Add",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.Mayor.Edit",
                            IdAccion = "Edit",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.Mayor.Update",
                            IdAccion = "Update",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.Mayor.Delete",
                            IdAccion = "Delete",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Contable.Mayor.GetAll",
                            IdAccion = "GetAll",
                            IdRecurso = "Contable.Mayor"
                        },
                        new
                        {
                            Id = "Comun.Sujeto.Add",
                            IdAccion = "Add",
                            IdRecurso = "Comun.Sujeto"
                        },
                        new
                        {
                            Id = "Comun.Sujeto.Edit",
                            IdAccion = "Edit",
                            IdRecurso = "Comun.Sujeto"
                        },
                        new
                        {
                            Id = "Comun.Sujeto.Update",
                            IdAccion = "Update",
                            IdRecurso = "Comun.Sujeto"
                        },
                        new
                        {
                            Id = "Comun.Sujeto.Delete",
                            IdAccion = "Delete",
                            IdRecurso = "Comun.Sujeto"
                        },
                        new
                        {
                            Id = "Comun.Sujeto.GetAll",
                            IdAccion = "GetAll",
                            IdRecurso = "Comun.Sujeto"
                        },
                        new
                        {
                            Id = "Contable.LibroIva.List",
                            IdAccion = "GetAll",
                            IdRecurso = "Contable.LibroIva"
                        },
                        new
                        {
                            Id = "Contable.LibroIva.Print",
                            IdAccion = "Execute",
                            IdRecurso = "Contable.LibroIva"
                        },
                        new
                        {
                            Id = "Venta.Factura.Add",
                            IdAccion = "Add",
                            IdRecurso = "Venta.Factura"
                        },
                        new
                        {
                            Id = "Venta.Factura.Edit",
                            IdAccion = "Edit",
                            IdRecurso = "Venta.Factura"
                        },
                        new
                        {
                            Id = "Venta.Factura.Update",
                            IdAccion = "Update",
                            IdRecurso = "Venta.Factura"
                        },
                        new
                        {
                            Id = "Venta.Factura.Delete",
                            IdAccion = "Delete",
                            IdRecurso = "Venta.Factura"
                        },
                        new
                        {
                            Id = "Venta.Factura.GetAll",
                            IdAccion = "GetAll",
                            IdRecurso = "Venta.Factura"
                        },
                        new
                        {
                            Id = "Venta.Factura.Print",
                            IdAccion = "Execute",
                            IdRecurso = "Venta.Factura"
                        },
                        new
                        {
                            Id = "Tesoreria.ReciboCtaCte.Add",
                            IdAccion = "Add",
                            IdRecurso = "Tesoreria.ReciboCtaCte"
                        },
                        new
                        {
                            Id = "Tesoreria.ReciboCtaCte.Edit",
                            IdAccion = "Edit",
                            IdRecurso = "Tesoreria.ReciboCtaCte"
                        },
                        new
                        {
                            Id = "Tesoreria.ReciboCtaCte.Update",
                            IdAccion = "Update",
                            IdRecurso = "Tesoreria.ReciboCtaCte"
                        },
                        new
                        {
                            Id = "Tesoreria.ReciboCtaCte.Delete",
                            IdAccion = "Delete",
                            IdRecurso = "Tesoreria.ReciboCtaCte"
                        },
                        new
                        {
                            Id = "Tesoreria.ReciboCtaCte.GetAll",
                            IdAccion = "GetAll",
                            IdRecurso = "Tesoreria.ReciboCtaCte"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Provincia", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Provincia");

                    b.HasData(
                        new
                        {
                            Id = "00",
                            Nombre = "CIUDAD AUTÓNOMA BUENOS AIRES"
                        },
                        new
                        {
                            Id = "01",
                            Nombre = "BUENOS AIRES"
                        },
                        new
                        {
                            Id = "02",
                            Nombre = " CATAMARCA"
                        },
                        new
                        {
                            Id = "03",
                            Nombre = "CÓRDOBA"
                        },
                        new
                        {
                            Id = "04",
                            Nombre = "CORRIENTES"
                        },
                        new
                        {
                            Id = "05",
                            Nombre = "ENTRE RIOS"
                        },
                        new
                        {
                            Id = "06",
                            Nombre = "JUJUY"
                        },
                        new
                        {
                            Id = "07",
                            Nombre = "MENDOZA"
                        },
                        new
                        {
                            Id = "08",
                            Nombre = "LA RIOJA"
                        },
                        new
                        {
                            Id = "09",
                            Nombre = "SALTA"
                        },
                        new
                        {
                            Id = "10",
                            Nombre = "SAN JUAN"
                        },
                        new
                        {
                            Id = "11",
                            Nombre = "SAN LUIS"
                        },
                        new
                        {
                            Id = "12",
                            Nombre = "SANTA FE"
                        },
                        new
                        {
                            Id = "13",
                            Nombre = "SANTIAGO DEL ESTERO"
                        },
                        new
                        {
                            Id = "14",
                            Nombre = "TUCUMÁN"
                        },
                        new
                        {
                            Id = "16",
                            Nombre = "CHACO"
                        },
                        new
                        {
                            Id = "17",
                            Nombre = "CHUBUT"
                        },
                        new
                        {
                            Id = "18",
                            Nombre = "FORMOSA"
                        },
                        new
                        {
                            Id = "19",
                            Nombre = "MISIONES"
                        },
                        new
                        {
                            Id = "20",
                            Nombre = "NEUQUÉN"
                        },
                        new
                        {
                            Id = "21",
                            Nombre = "LA PAMPA"
                        },
                        new
                        {
                            Id = "22",
                            Nombre = "RIO NEGRO"
                        },
                        new
                        {
                            Id = "23",
                            Nombre = "SANTA CRUZ"
                        },
                        new
                        {
                            Id = "24",
                            Nombre = "TIERRA DEL FUEGO"
                        },
                        new
                        {
                            Id = "PES",
                            Nombre = "PESOS"
                        },
                        new
                        {
                            Id = "DOL",
                            Nombre = "Dólar ESTADOUNIDENSE"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Recurso", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recurso");

                    b.HasData(
                        new
                        {
                            Id = "Almacen.Articulo",
                            Nombre = "Articulo"
                        },
                        new
                        {
                            Id = "Comun.Sujeto",
                            Nombre = "Sujetos (Clientes y Proveedores)"
                        },
                        new
                        {
                            Id = "Venta.Factura",
                            Nombre = "Factura"
                        },
                        new
                        {
                            Id = "Contable.CuentaMayor",
                            Nombre = "CuentaMayor"
                        },
                        new
                        {
                            Id = "Contable.Mayor",
                            Nombre = "Mayor"
                        },
                        new
                        {
                            Id = "Contable.MovCtaCte",
                            Nombre = "Cuentas Corrientes"
                        },
                        new
                        {
                            Id = "Contable.LibroIva",
                            Nombre = "Libro Iva"
                        },
                        new
                        {
                            Id = "Tesoreria.ReciboCtaCte",
                            Nombre = "Recibo Cta.Cte."
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdOrganizacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdOrganizacion");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            Nombre = "Admin"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.RolAccount", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("IdAccount")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("IdRol", "IdAccount");

                    b.HasIndex("IdAccount");

                    b.ToTable("RolAccount");

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            IdAccount = "0000000001"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.RolPermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<Guid>("IdOrganizacion")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("IdPermiso")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("IdRol", "IdOrganizacion", "IdPermiso");

                    b.ToTable("RolPermiso");

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Almacen.Articulo.Add"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Almacen.Articulo.Edit"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Almacen.Articulo.Update"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Almacen.Articulo.Delete"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Almacen.Articulo.GetAll"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Almacen.Articulo.Update.Precio"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.CuentaMayor.Add"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.CuentaMayor.Edit"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.CuentaMayor.Update"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.CuentaMayor.Delete"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.CuentaMayor.GetAll"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.Mayor.Add"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.Mayor.Edit"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.Mayor.Update"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.Mayor.Delete"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.Mayor.GetAll"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Comun.Sujeto.Add"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Comun.Sujeto.Edit"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Comun.Sujeto.Update"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Comun.Sujeto.Delete"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Comun.Sujeto.GetAll"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Venta.Factura.Add"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Venta.Factura.Edit"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Venta.Factura.Update"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Venta.Factura.Delete"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Venta.Factura.GetAll"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Venta.Factura.Print"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Tesoreria.ReciboCtaCte.Add"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Tesoreria.ReciboCtaCte.Edit"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Tesoreria.ReciboCtaCte.Update"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Tesoreria.ReciboCtaCte.Delete"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Tesoreria.ReciboCtaCte.GetAll"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.LibroIva.List"
                        },
                        new
                        {
                            IdRol = 1,
                            IdOrganizacion = new Guid("3f2db00c-939b-466b-813a-d01be3ddb836"),
                            IdPermiso = "Contable.LibroIva.Print"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Setting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.TipoDocumento", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodAfip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");

                    b.HasData(
                        new
                        {
                            Id = "80",
                            CodAfip = "80",
                            Nombre = "CUIT"
                        },
                        new
                        {
                            Id = "86",
                            CodAfip = "86",
                            Nombre = "CUIL"
                        },
                        new
                        {
                            Id = "87",
                            CodAfip = "87",
                            Nombre = "CDI"
                        },
                        new
                        {
                            Id = "89",
                            CodAfip = "89",
                            Nombre = "LIBRETA DE ENROLAMIENTO"
                        },
                        new
                        {
                            Id = "90",
                            CodAfip = "90",
                            Nombre = "LIBRETA CIVICA"
                        },
                        new
                        {
                            Id = "96",
                            CodAfip = "96",
                            Nombre = "DNI"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.TipoFactura", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodAfip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoFactura");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CodAfip = "1",
                            Nombre = "FACTURA"
                        },
                        new
                        {
                            Id = "2",
                            CodAfip = "2",
                            Nombre = "NOTA DE CREDITO"
                        },
                        new
                        {
                            Id = "3",
                            CodAfip = "3",
                            Nombre = "NOTA DE DEBITO"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.UnidadMedida", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodAfip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UnidadMedida");

                    b.HasData(
                        new
                        {
                            Id = "001",
                            CodAfip = "001",
                            Nombre = "KILOGRAMO"
                        },
                        new
                        {
                            Id = "002",
                            CodAfip = "002",
                            Nombre = "METROS"
                        },
                        new
                        {
                            Id = "003",
                            CodAfip = "003",
                            Nombre = "METRO CUADRADO"
                        },
                        new
                        {
                            Id = "004",
                            CodAfip = "004",
                            Nombre = "METRO CUBICO"
                        },
                        new
                        {
                            Id = "005",
                            CodAfip = "005",
                            Nombre = "LITROS"
                        },
                        new
                        {
                            Id = "006",
                            CodAfip = "006",
                            Nombre = "1000 KILOWATT HORA"
                        },
                        new
                        {
                            Id = "007",
                            CodAfip = "007",
                            Nombre = "UNIDAD"
                        },
                        new
                        {
                            Id = "014",
                            CodAfip = "014",
                            Nombre = "GRAMO"
                        },
                        new
                        {
                            Id = "017",
                            CodAfip = "017",
                            Nombre = "KILOMETRO"
                        },
                        new
                        {
                            Id = "020",
                            CodAfip = "020",
                            Nombre = "CENTIMETRO"
                        },
                        new
                        {
                            Id = "029",
                            CodAfip = "029",
                            Nombre = "TONELADA"
                        });
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Empresa", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Organizacion", "Organizacion")
                        .WithMany()
                        .HasForeignKey("IdOrganizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.EmpresaAccount", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Empresa", null)
                        .WithMany("Accounts")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Localidad", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Permiso", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Accion", "Accion")
                        .WithMany()
                        .HasForeignKey("IdAccion");

                    b.HasOne("BackEnd.Services.Models.Global.Recurso", "Recurso")
                        .WithMany()
                        .HasForeignKey("IdRecurso");

                    b.Navigation("Accion");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Rol", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Organizacion", "Organizacion")
                        .WithMany()
                        .HasForeignKey("IdOrganizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.RolAccount", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Account", "Account")
                        .WithMany("Roles")
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Services.Models.Global.Rol", "Rol")
                        .WithMany("Accounts")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.RolPermiso", b =>
                {
                    b.HasOne("BackEnd.Services.Models.Global.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Account", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Empresa", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BackEnd.Services.Models.Global.Rol", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
